"fa36bf6dea863499f1a04d6df98f668bd92d34a4"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#4=[nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -252) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 278) nil (23810 22160 421743 536000) 0 nil]) ((273 . 276) (272 . 274) (#("(" 0 1 (fontified nil face font-lock-doc-face)) . -272) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (271 . 273)) nil (23810 22160 421780 359000) 0 nil]) ((#("(" 0 1 (fontified nil face font-lock-doc-face)) . -271) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . 1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(")" 0 1 (fontified t face font-lock-doc-face)) . 272) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . -1)) nil (23810 22160 421887 643000) 0 nil]) ((271 . 273) (#("(" 0 1 (fontified nil face font-lock-doc-face)) . -271) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (266 . 272)) nil (23810 22160 421917 229000) 0 nil]) ((248 . 251) (247 . 249) (#("[" 0 1 (fontified nil face font-lock-doc-face)) . -247) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (246 . 248)) nil (23810 22160 421949 38000) 0 nil]) ((236 . 241) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -236) (undo-tree-id30 . -1) (235 . 237)) nil (23810 22160 421966 499000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-doc-face)) . -235) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 236) nil (23810 22160 421984 316000) 0 nil]) ((235 . 236) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -235) (undo-tree-id33 . -1) (233 . 236)) nil (23810 22160 421999 949000) 0 nil]) ((229 . 239)) nil (23810 22160 422008 0) 0 nil]) ((211 . 214) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -211) (undo-tree-id34 . -1) (206 . 212) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -206) (undo-tree-id35 . -1) (198 . 207)) nil (23810 22160 422030 42000) 0 nil]) ((#(")" 0 1 (fontified nil face font-lock-doc-face)) . 183) (179 . 183) (178 . 180) (#("(" 0 1 (fontified nil face font-lock-doc-face)) . -178) (168 . 179)) nil (23810 22160 422046 214000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-doc-face)) . -168) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -169) (undo-tree-id38 . -1) 170) nil (23810 22160 422071 697000) 0 nil]) ((166 . 170)) nil (23810 22160 422081 292000) 0 nil]) ((129 . 150)) nil (23810 22160 422087 559000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -129) (undo-tree-id39 . -1) (#("h" 0 1 (fontified t face font-lock-doc-face)) . -130) (undo-tree-id40 . -1) 131) nil (23810 22160 422105 123000) 0 nil]) ((123 . 131) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -123) (undo-tree-id41 . -1) (121 . 124)) nil (23810 22160 422121 609000) 0 nil]) ((#("h" 0 1 (fontified t face font-lock-doc-face)) . -121) (undo-tree-id42 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -122) (undo-tree-id43 . -1) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -123) (undo-tree-id44 . -1) 124) nil (23810 22160 422146 323000) 0 nil]) ((123 . 124) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -123) (undo-tree-id45 . -1) (121 . 124)) nil (23810 22160 422163 773000) 0 nil]) ((120 . 121)) nil (23810 22160 422171 951000) 0 nil]) ((#("FIXME! briefly describe function" 0 5 (fontified t face (:inherit hl-todo :foreground "#cc9393")) 5 32 (fontified t face font-lock-doc-face)) . 120) (undo-tree-id46 . -32) (undo-tree-id47 . -32) 143) nil (23810 22160 422187 593000) 0 nil]) ((213 . 217) (199 . 203) (184 . 188) (169 . 173) (154 . 158) (112 . 200) 107) nil (23810 22160 422203 851000) 0 nil]) ((1 . 446) (#("# you can write to stdout for debugging purposes, e.g.
# print(\"this is a debug message\")

def solution(A, K):
    # write your code in Python 3.6
    result = [0] * len(A) # prefill new array to avoid tmp memory solutions
    for index in range(len(A)):
        # calculate new position (current index + shift) and restart at 0 for values larger len(A)
        shift = (index + K) % len(A)
        result[shift] = A[index]

    return result" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 55 (fontified t face font-lock-comment-face) 55 57 (fontified t face font-lock-comment-delimiter-face) 57 63 (fontified t face font-lock-comment-face) 63 64 (fontified t syntax-table #1=(15) face font-lock-comment-face) 64 87 (fontified t face font-lock-comment-face) 87 88 (fontified t syntax-table #1# face font-lock-comment-face) 88 90 (fontified t face font-lock-comment-face) 90 91 (fontified t) 91 94 (fontified t face font-lock-keyword-face) 94 95 (fontified t) 95 103 (fontified t face font-lock-function-name-face) 103 104 (fontified t face (rainbow-delimiters-depth-1-face)) 104 108 (fontified t) 108 109 (fontified t face (rainbow-delimiters-depth-1-face)) 109 110 (fontified t composition (3 1 #2=[9 57708])) 110 115 (fontified t) 115 117 (fontified t face font-lock-comment-delimiter-face) 117 147 (fontified t face font-lock-comment-face) 147 151 (fontified t) 151 157 (fontified t face font-lock-variable-name-face) 157 160 (fontified t) 160 161 (fontified t face (rainbow-delimiters-depth-1-face)) 161 162 (fontified t face highlight-numbers-number) 162 163 (fontified t face (rainbow-delimiters-depth-1-face)) 163 164 (fontified t) 164 165 (fontified t composition (7 1 [9 57711])) 165 166 (fontified t) 166 169 (fontified t face font-lock-builtin-face) 169 170 (fontified t face (rainbow-delimiters-depth-1-face)) 170 171 (fontified t) 171 172 (fontified t face (rainbow-delimiters-depth-1-face)) 172 173 (fontified t) 173 175 (fontified t face font-lock-comment-delimiter-face) 175 223 (fontified t face font-lock-comment-face) 223 227 (fontified t) 227 230 (fontified t face font-lock-keyword-face) 230 237 (fontified t) 237 239 (fontified t face font-lock-keyword-face) 239 240 (fontified t) 240 245 (fontified t face font-lock-builtin-face) 245 246 (fontified t face (rainbow-delimiters-depth-1-face)) 246 249 (fontified t face font-lock-builtin-face) 249 250 (fontified t face (rainbow-delimiters-depth-2-face)) 250 251 (fontified t) 251 252 (fontified t face (rainbow-delimiters-depth-2-face)) 252 253 (fontified t face (rainbow-delimiters-depth-1-face)) 253 254 (fontified t composition (3 1 #2#)) 254 263 (fontified t) 263 265 (fontified t face font-lock-comment-delimiter-face) 265 303 (fontified t face font-lock-comment-face) 303 304 (fontified t face font-lock-comment-face composition (5 1 #3=[9 57709])) 304 354 (fontified t face font-lock-comment-face) 354 362 (fontified t) 362 367 (fontified t face font-lock-variable-name-face) 367 370 (fontified t) 370 371 (fontified t face (rainbow-delimiters-depth-1-face)) 371 377 (fontified t) 377 378 (fontified t composition (5 1 #3#)) 378 380 (fontified t) 380 381 (fontified t face (rainbow-delimiters-depth-1-face)) 381 384 (fontified t) 384 387 (fontified t face font-lock-builtin-face) 387 388 (fontified t face (rainbow-delimiters-depth-1-face)) 388 389 (fontified t) 389 390 (fontified t face (rainbow-delimiters-depth-1-face)) 390 399 (fontified t) 399 405 (fontified t face font-lock-variable-name-face) 405 406 (fontified t face (rainbow-delimiters-depth-1-face)) 406 411 (fontified t) 411 412 (fontified t face (rainbow-delimiters-depth-1-face)) 412 416 (fontified t) 416 417 (fontified t face (rainbow-delimiters-depth-1-face)) 417 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 429 (fontified t) 429 435 (fontified t face font-lock-keyword-face) 435 441 (fontified t) 441 442 (fontified t rear-nonsticky t)) . 1) (undo-tree-id48 . -407) (undo-tree-id49 . -391) (undo-tree-id50 . -424) (undo-tree-id51 . -441) (undo-tree-id52 . 37) (undo-tree-id53 . -406) (undo-tree-id54 . 31) (undo-tree-id55 . -412) 408) nil (23810 22160 422261 652000) 0 nil]) ((nil rear-nonsticky nil 442 . 443) (nil fontified nil 1 . 443) (1 . 443) (t . -1)) nil (23810 22160 422276 235000) 0 nil]) nil nil (23810 22160 422282 344000) 0 nil] #4# 1496 23 nil)