"7d47ff80061067ff7c6e2581eb86a877aa909c1d"
#s(undo-tree [nil ([nil (#3=[nil nil ((1 . 920) (#("# Binary gap
# you can write to stdout for debugging purposes, e.g.
# print(\"this is a debug message\")
import re

def solution(N):
    ''' Binary gap solver
    This function returns the length of the longest sequence of the integer representation of N
    which consists of 0's and is surrounded by 1's. If it does not exist, it returns 0.
    '''
    if not isinstance(N, int):
        raise(\"N is not a valid integer\")

    result = 0
    sets = None
    binary_representation = bin(N)

    # Duplicate 1 as re cannot work with overlaps and we do not cause problems
    binary_representation = str(binary_representation).replace(\"1\", \"11\")

    # find all sets of numbers surrounded by 1's
    sets = re.findall(r\"1(0+?)1\", binary_representation)
    sets = [len(x) for x in sets]
    if len(sets) > 0:
        result = max(sets)
    else:
        # No surrounded array found
        result = 0

    return result" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 13 (fontified t face font-lock-comment-face) 13 15 (fontified t face font-lock-comment-delimiter-face) 15 68 (fontified t face font-lock-comment-face) 68 70 (fontified t face font-lock-comment-delimiter-face) 70 76 (fontified t face font-lock-comment-face) 76 77 (fontified t syntax-table #1=(15) face font-lock-comment-face) 77 100 (fontified t face font-lock-comment-face) 100 101 (fontified t syntax-table #1# face font-lock-comment-face) 101 103 (fontified t face font-lock-comment-face) 103 109 (fontified t face font-lock-keyword-face) 109 114 (fontified t) 114 117 (fontified t face font-lock-keyword-face) 117 118 (fontified t) 118 126 (fontified t face font-lock-function-name-face) 126 127 (fontified t face (rainbow-delimiters-depth-1-face)) 127 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-1-face)) 129 130 (fontified t composition (3 1 #2=[9 57708])) 130 135 (fontified t) 135 136 (fontified t syntax-table #1# face font-lock-doc-face) 136 347 (fontified t face font-lock-doc-face) 347 348 (fontified t syntax-table #1# face font-lock-doc-face) 348 353 (fontified t) 353 355 (fontified t face font-lock-keyword-face) 355 356 (fontified t) 356 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 370 (fontified t face font-lock-builtin-face) 370 371 (fontified t face (rainbow-delimiters-depth-1-face)) 371 374 (fontified t) 374 377 (fontified t face font-lock-builtin-face) 377 378 (fontified t face (rainbow-delimiters-depth-1-face)) 378 379 (fontified t composition (3 1 #2#)) 379 388 (fontified t) 388 393 (fontified t face font-lock-keyword-face) 393 394 (fontified t face (rainbow-delimiters-depth-1-face)) 394 395 (fontified t syntax-table #1# face font-lock-string-face) 395 419 (fontified t face font-lock-string-face) 419 420 (fontified t syntax-table #1# face font-lock-string-face) 420 421 (fontified t face (rainbow-delimiters-depth-1-face)) 421 427 (fontified t) 427 433 (fontified t face font-lock-variable-name-face) 433 436 (fontified t) 436 437 (fontified t face highlight-numbers-number) 437 442 (fontified t) 442 446 (fontified t face font-lock-variable-name-face) 446 449 (fontified t) 449 453 (fontified t face font-lock-constant-face) 453 458 (fontified t) 458 479 (fontified t face font-lock-variable-name-face) 479 482 (fontified t) 482 485 (fontified t face font-lock-builtin-face) 485 486 (fontified t face (rainbow-delimiters-depth-1-face)) 486 487 (fontified t) 487 488 (fontified t face (rainbow-delimiters-depth-1-face)) 488 494 (fontified t) 494 496 (fontified t face font-lock-comment-delimiter-face) 496 500 (fontified t face font-lock-comment-face) 500 569 (fontified t face font-lock-comment-face) 569 573 (fontified t) 573 594 (fontified t face font-lock-variable-name-face) 594 597 (fontified t) 597 600 (fontified t face font-lock-builtin-face) 600 601 (fontified t face (rainbow-delimiters-depth-1-face)) 601 622 (fontified t) 622 623 (fontified t face (rainbow-delimiters-depth-1-face)) 623 631 (fontified t) 631 632 (fontified t face (rainbow-delimiters-depth-1-face)) 632 633 (fontified t syntax-table #1# face font-lock-string-face) 633 634 (fontified t face font-lock-string-face) 634 635 (fontified t syntax-table #1# face font-lock-string-face) 635 637 (fontified t) 637 638 (fontified t syntax-table #1# face font-lock-string-face) 638 640 (fontified t face font-lock-string-face) 640 641 (fontified t syntax-table #1# face font-lock-string-face) 641 642 (fontified t face (rainbow-delimiters-depth-1-face)) 642 648 (fontified t) 648 650 (fontified t face font-lock-comment-delimiter-face) 650 690 (fontified t face font-lock-comment-face) 690 691 (fontified t syntax-table #1# face font-lock-comment-face) 691 693 (fontified t face font-lock-comment-face) 693 697 (fontified t) 697 701 (fontified t face font-lock-variable-name-face) 701 714 (fontified t) 714 715 (fontified t face (rainbow-delimiters-depth-1-face)) 715 716 (fontified t) 716 717 (fontified t syntax-table #1# face font-lock-string-face) 717 720 (fontified t face font-lock-string-face) 720 721 (fontified t face font-lock-string-face composition (5 1 [9 57709])) 721 724 (fontified t face font-lock-string-face) 724 725 (fontified t syntax-table #1# face font-lock-string-face) 725 748 (fontified t) 748 749 (fontified t face (rainbow-delimiters-depth-1-face)) 749 754 (fontified t) 754 758 (fontified t face font-lock-variable-name-face) 758 761 (fontified t) 761 762 (fontified t face (rainbow-delimiters-depth-1-face)) 762 765 (fontified t face font-lock-builtin-face) 765 766 (fontified t face (rainbow-delimiters-depth-2-face)) 766 767 (fontified t) 767 768 (fontified t face (rainbow-delimiters-depth-2-face)) 768 769 (fontified t) 769 772 (fontified t face font-lock-keyword-face) 772 775 (fontified t) 775 777 (fontified t face font-lock-keyword-face) 777 782 (fontified t) 782 783 (fontified t face (rainbow-delimiters-depth-1-face)) 783 788 (fontified t) 788 790 (fontified t face font-lock-keyword-face) 790 791 (fontified t) 791 794 (fontified t face font-lock-builtin-face) 794 795 (fontified t face (rainbow-delimiters-depth-1-face)) 795 799 (fontified t) 799 800 (fontified t face (rainbow-delimiters-depth-1-face)) 800 803 (fontified t) 803 804 (fontified t face highlight-numbers-number) 804 805 (fontified t composition (3 1 #2#)) 805 814 (fontified t) 814 820 (fontified t face font-lock-variable-name-face) 820 823 (fontified t) 823 826 (fontified t face font-lock-builtin-face) 826 827 (fontified t face (rainbow-delimiters-depth-1-face)) 827 831 (fontified t) 831 832 (fontified t face (rainbow-delimiters-depth-1-face)) 832 837 (fontified t) 837 841 (fontified t face font-lock-keyword-face) 841 842 (fontified t composition (3 1 #2#)) 842 851 (fontified t) 851 853 (fontified t face font-lock-comment-delimiter-face) 853 879 (fontified t face font-lock-comment-face) 879 887 (fontified t) 887 893 (fontified t face font-lock-variable-name-face) 893 896 (fontified t) 896 897 (fontified t face highlight-numbers-number) 897 903 (fontified t) 903 909 (fontified t face font-lock-keyword-face) 909 915 (fontified t) 915 916 (fontified t rear-nonsticky t)) . 1) (undo-tree-id0 . -641) (undo-tree-id1 . -642) (undo-tree-id2 . -569) (undo-tree-id3 . -643) (undo-tree-id4 . -915) (undo-tree-id5 . -915) (undo-tree-id6 . -135) (undo-tree-id7 . -135) (undo-tree-id8 . -135) (undo-tree-id9 . -135) (undo-tree-id10 . -348) (undo-tree-id11 . -135) (undo-tree-id12 . -114) (undo-tree-id13 . -130) (undo-tree-id14 . -114) (undo-tree-id15 . -130) (undo-tree-id16 . -114) (undo-tree-id17 . -114) (undo-tree-id18 . -114) (undo-tree-id19 . -114) (undo-tree-id20 . -114) (undo-tree-id21 . -388) (undo-tree-id22 . -388) (undo-tree-id23 . -573) (undo-tree-id24 . -573) (undo-tree-id25 . -597) (undo-tree-id26 . -573) (undo-tree-id27 . -573) (undo-tree-id28 . -597) (undo-tree-id29 . -697) (undo-tree-id30 . -697) (undo-tree-id31 . -704) (undo-tree-id32 . -490) (undo-tree-id33 . -500) (undo-tree-id34 . -114) (undo-tree-id35 . -117) (undo-tree-id36 . -233) (undo-tree-id37 . -247) (undo-tree-id38 . -330) (undo-tree-id39 . -337) (undo-tree-id40 . -910) (undo-tree-id41 . -916) (undo-tree-id42 . -641) (undo-tree-id43 . -642) (undo-tree-id44 . -641) (undo-tree-id45 . -642) (undo-tree-id46 . 285) (undo-tree-id47 . -632) (undo-tree-id48 . 275) (undo-tree-id49 . -642) (undo-tree-id50 . -690) (undo-tree-id51 . -691) (undo-tree-id52 . -631) (undo-tree-id53 . -632) (undo-tree-id54 . -690) (undo-tree-id55 . -691) (undo-tree-id56 . -631) (undo-tree-id57 . -632) (undo-tree-id58 . 285) (undo-tree-id59 . -632) (undo-tree-id60 . 284) (undo-tree-id61 . -641) (undo-tree-id62 . 275) (undo-tree-id63 . -642) 642) nil (23810 21961 443294 88000) 0 nil]) ((nil rear-nonsticky nil 916 . 917) (nil fontified nil 1 . 917) (1 . 917) (t . -1)) nil (23810 21961 443307 258000) 0 nil]) nil nil (23810 21961 443309 417000) 0 nil] #3# 1484 2 nil)